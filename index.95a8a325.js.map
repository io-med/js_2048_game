{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        (0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)(this, \"emptyCells\", []);\n        (0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)(this, \"score\", 0);\n        (0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)(this, \"gameStatus\", \"idle\");\n        this.INITIAL_STATE = initialState;\n        this.state = JSON.parse(JSON.stringify(this.INITIAL_STATE));\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.gameStatus;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.setEmptyCells();\n                this.addNumber();\n                this.addNumber();\n                this.gameStatus = \"playing\";\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.score = 0;\n                this.emptyCells = [];\n                this.state = JSON.parse(JSON.stringify(this.INITIAL_STATE));\n                this.gameStatus = \"idle\";\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                if (this.gameStatus !== \"playing\") return;\n                var moveWasMade = false;\n                var newState = this.state.map(function(line) {\n                    var newLine = _this.mergeLine(line);\n                    if (newLine !== line) moveWasMade = true;\n                    return newLine;\n                });\n                if (moveWasMade) this.endMove(newState);\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                if (this.gameStatus !== \"playing\") return;\n                var moveWasMade = false;\n                var newState = this.state.map(function(line) {\n                    var reversedLine = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(line).reverse();\n                    var newLine = _this.mergeLine(reversedLine);\n                    if (newLine !== reversedLine) moveWasMade = true;\n                    return newLine.reverse();\n                });\n                if (moveWasMade) this.endMove(newState);\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this;\n                if (this.gameStatus !== \"playing\") return;\n                var moveWasMade = false;\n                var rotatedState = this.rotateMatrixCounterclockwise(this.state);\n                var newState = rotatedState.map(function(line) {\n                    var newLine = _this.mergeLine(line);\n                    if (newLine !== line) moveWasMade = true;\n                    return newLine;\n                });\n                if (moveWasMade) this.endMove(this.rotateMatrixClockwise(newState));\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this;\n                if (this.gameStatus !== \"playing\") return;\n                var moveWasMade = false;\n                var rotatedState = this.rotateMatrixClockwise(this.state);\n                var newState = rotatedState.map(function(line) {\n                    var newLine = _this.mergeLine(line);\n                    if (newLine !== line) moveWasMade = true;\n                    return newLine;\n                });\n                if (moveWasMade) this.endMove(this.rotateMatrixCounterclockwise(newState));\n            }\n        },\n        {\n            key: \"endMove\",\n            value: function endMove(newState) {\n                this.state = newState;\n                this.setEmptyCells();\n                this.addNumber();\n                if (this.emptyCells.length === 0) this.checkIfGameOver();\n            }\n        },\n        {\n            key: \"mergeLine\",\n            value: function mergeLine(line) {\n                var _this = this;\n                var noZeroesLine = line.filter(function(cell) {\n                    return cell !== 0;\n                });\n                var scoreToAdd = 0;\n                var mergedLine = noZeroesLine.reduce(function(acc, cell) {\n                    if (cell === acc[acc.length - 1]) {\n                        var mergedCell = cell * 2;\n                        acc.splice(acc.length - 1, 1, mergedCell, 0);\n                        scoreToAdd += mergedCell;\n                        if (mergedCell === 2048) _this.gameStatus = \"win\";\n                        return acc;\n                    }\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(acc).concat([\n                        cell\n                    ]);\n                }, []);\n                var mergedNoZeroesLine = mergedLine.filter(function(cell) {\n                    return cell !== 0;\n                });\n                var zeroes = new Array(line.length - mergedNoZeroesLine.length).fill(0);\n                var newLine = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(mergedNoZeroesLine).concat((0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(zeroes));\n                if (scoreToAdd > 0) {\n                    this.score += scoreToAdd;\n                    return newLine;\n                }\n                if (newLine.toString() === line.toString()) return line;\n                return newLine;\n            }\n        },\n        {\n            key: \"setEmptyCells\",\n            value: function setEmptyCells() {\n                var updatedEmptyCells = [];\n                this.state.forEach(function(line, lineIndex) {\n                    line.forEach(function(cell, cellIndex) {\n                        if (cell === 0) updatedEmptyCells.push([\n                            lineIndex,\n                            cellIndex\n                        ]);\n                    });\n                });\n                this.emptyCells = updatedEmptyCells;\n            }\n        },\n        {\n            key: \"addNumber\",\n            value: function addNumber() {\n                var emptyCellCount = this.emptyCells.length;\n                if (emptyCellCount === 0) return;\n                var indexOfEmptyCell = Math.floor(Math.random() * emptyCellCount);\n                var numberToAdd = Math.floor(Math.random() * 10) ? 2 : 4;\n                var stateLineIndex = this.emptyCells[indexOfEmptyCell][0];\n                var stateRowIndex = this.emptyCells[indexOfEmptyCell][1];\n                this.state[stateLineIndex][stateRowIndex] = numberToAdd;\n                this.emptyCells.splice(indexOfEmptyCell, 1);\n            }\n        },\n        {\n            key: \"checkIfGameOver\",\n            value: function checkIfGameOver() {\n                var currentState = this.state;\n                for(var rowIndex = 0; rowIndex < currentState.length; rowIndex += 2){\n                    var row = currentState[rowIndex];\n                    for(var columnIndex = 0; columnIndex < row.length; columnIndex++){\n                        if (currentState[rowIndex][columnIndex] === currentState[rowIndex + 1][columnIndex]) return;\n                    }\n                }\n                for(var rowIndex1 = 0; rowIndex1 < currentState.length; rowIndex1++){\n                    var row1 = currentState[rowIndex1];\n                    for(var columnIndex1 = 0; columnIndex1 < row1.length; columnIndex1 += 2){\n                        if (currentState[rowIndex1][columnIndex1] === currentState[rowIndex1][columnIndex1 + 1]) return;\n                    }\n                }\n                this.gameStatus = \"lose\";\n            }\n        },\n        {\n            key: \"rotateMatrixClockwise\",\n            value: function rotateMatrixClockwise(matrix) {\n                var rotatedMatrix = matrix.map(function() {\n                    return [];\n                });\n                matrix.forEach(function(row, rowIndex) {\n                    row.forEach(function(cell, cellIndex) {\n                        rotatedMatrix[cellIndex][matrix.length - rowIndex - 1] = cell;\n                    });\n                });\n                return rotatedMatrix;\n            }\n        },\n        {\n            key: \"rotateMatrixCounterclockwise\",\n            value: function rotateMatrixCounterclockwise(matrix) {\n                var rotatedMatrix = matrix.map(function() {\n                    return [];\n                });\n                matrix.forEach(function(row, rowIndex) {\n                    row.forEach(function(cell, cellIndex) {\n                        rotatedMatrix[matrix.length - cellIndex - 1][rowIndex] = cell;\n                    });\n                });\n                return rotatedMatrix;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$keys = {\n    up: \"ArrowUp\",\n    down: \"ArrowDown\",\n    left: \"ArrowLeft\",\n    right: \"ArrowRight\"\n};\nvar $197cd56b15c33885$var$cells = document.querySelectorAll(\".field-cell \");\nvar $197cd56b15c33885$var$score = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$button = document.querySelector(\".button\");\nvar $197cd56b15c33885$var$messages = document.querySelectorAll(\".message\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageVictory = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$clearMessages = function() {\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = $197cd56b15c33885$var$messages[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var message = _step.value;\n            message.classList.add(\"hidden\");\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n};\nfunction $197cd56b15c33885$var$render() {\n    var stateCells = $197cd56b15c33885$var$game.state.flat(1);\n    for(var i = 0; i < $197cd56b15c33885$var$cells.length; i++){\n        $197cd56b15c33885$var$cells[i].innerHTML = stateCells[i] + \"\";\n        $197cd56b15c33885$var$cells[i].className = \"field-cell field-cell--\".concat(stateCells[i]);\n    }\n    $197cd56b15c33885$var$score.innerHTML = $197cd56b15c33885$var$game.score;\n}\n$197cd56b15c33885$var$button.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$game.gameStatus === \"idle\") {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$button.className = \"button restart\";\n        $197cd56b15c33885$var$button.innerHTML = \"Restart\";\n        $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n        $197cd56b15c33885$var$render();\n        return;\n    }\n    $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$clearMessages();\n    $197cd56b15c33885$var$button.className = \"button start\";\n    $197cd56b15c33885$var$button.innerHTML = \"Start\";\n    $197cd56b15c33885$var$messageStart.classList.remove(\"hidden\");\n    $197cd56b15c33885$var$render();\n});\ndocument.addEventListener(\"keydown\", function(param) {\n    var key = param.key;\n    if ($197cd56b15c33885$var$game.gameStatus === \"idle\") return;\n    switch(key){\n        case $197cd56b15c33885$var$keys.up:\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case $197cd56b15c33885$var$keys.down:\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        case $197cd56b15c33885$var$keys.left:\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case $197cd56b15c33885$var$keys.right:\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        default:\n            break;\n    }\n    if ($197cd56b15c33885$var$game.gameStatus === \"win\") $197cd56b15c33885$var$messageVictory.classList.remove(\"hidden\");\n    if ($197cd56b15c33885$var$game.gameStatus === \"lose\") {\n        $197cd56b15c33885$var$clearMessages();\n        $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n    }\n    $197cd56b15c33885$var$render();\n});\n\n})();\n//# sourceMappingURL=index.95a8a325.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst keys = {\n  up: 'ArrowUp',\n  down: 'ArrowDown',\n  left: 'ArrowLeft',\n  right: 'ArrowRight',\n};\n\nconst cells = document.querySelectorAll('.field-cell ');\nconst score = document.querySelector('.game-score');\nconst button = document.querySelector('.button');\nconst messages = document.querySelectorAll('.message');\nconst messageStart = document.querySelector('.message-start');\nconst messageVictory = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\n\nconst clearMessages = () => {\n  for (const message of messages) {\n    message.classList.add('hidden');\n  }\n};\n\nfunction render() {\n  const stateCells = game.state.flat(1);\n\n  for (let i = 0; i < cells.length; i++) {\n    cells[i].innerHTML = stateCells[i] + '';\n    cells[i].className = `field-cell field-cell--${stateCells[i]}`;\n  }\n\n  score.innerHTML = game.score;\n}\n\nbutton.addEventListener('click', () => {\n  if (game.gameStatus === 'idle') {\n    game.start();\n    button.className = 'button restart';\n    button.innerHTML = 'Restart';\n    messageStart.classList.add('hidden');\n    render();\n\n    return;\n  }\n\n  game.restart();\n\n  clearMessages();\n\n  button.className = 'button start';\n  button.innerHTML = 'Start';\n\n  messageStart.classList.remove('hidden');\n\n  render();\n});\n\ndocument.addEventListener('keydown', ({ key }) => {\n  if (game.gameStatus === 'idle') {\n    return;\n  }\n\n  switch (key) {\n    case keys.up:\n      game.moveUp();\n      break;\n\n    case keys.down:\n      game.moveDown();\n      break;\n\n    case keys.left:\n      game.moveLeft();\n      break;\n\n    case keys.right:\n      game.moveRight();\n      break;\n\n    default:\n      break;\n  }\n\n  if (game.gameStatus === 'win') {\n    messageVictory.classList.remove('hidden');\n  }\n\n  if (game.gameStatus === 'lose') {\n    clearMessages();\n    messageLose.classList.remove('hidden');\n  }\n\n  render();\n});\n","'use strict';\n\nclass Game {\n  emptyCells = [];\n  score = 0;\n  gameStatus = 'idle';\n\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.INITIAL_STATE = initialState;\n    this.state = JSON.parse(JSON.stringify(this.INITIAL_STATE));\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    return this.gameStatus;\n  }\n\n  start() {\n    this.setEmptyCells();\n    this.addNumber();\n    this.addNumber();\n\n    this.gameStatus = 'playing';\n  }\n\n  restart() {\n    this.score = 0;\n    this.emptyCells = [];\n    this.state = JSON.parse(JSON.stringify(this.INITIAL_STATE));\n    this.gameStatus = 'idle';\n  }\n\n  moveLeft() {\n    if (this.gameStatus !== 'playing') {\n      return;\n    }\n\n    let moveWasMade = false;\n\n    const newState = this.state.map((line) => {\n      const newLine = this.mergeLine(line);\n\n      if (newLine !== line) {\n        moveWasMade = true;\n      }\n\n      return newLine;\n    });\n\n    if (moveWasMade) {\n      this.endMove(newState);\n    }\n  }\n\n  moveRight() {\n    if (this.gameStatus !== 'playing') {\n      return;\n    }\n\n    let moveWasMade = false;\n\n    const newState = this.state.map((line) => {\n      const reversedLine = [...line].reverse();\n      const newLine = this.mergeLine(reversedLine);\n\n      if (newLine !== reversedLine) {\n        moveWasMade = true;\n      }\n\n      return newLine.reverse();\n    });\n\n    if (moveWasMade) {\n      this.endMove(newState);\n    }\n  }\n\n  moveUp() {\n    if (this.gameStatus !== 'playing') {\n      return;\n    }\n\n    let moveWasMade = false;\n\n    const rotatedState = this.rotateMatrixCounterclockwise(this.state);\n\n    const newState = rotatedState.map((line) => {\n      const newLine = this.mergeLine(line);\n\n      if (newLine !== line) {\n        moveWasMade = true;\n      }\n\n      return newLine;\n    });\n\n    if (moveWasMade) {\n      this.endMove(this.rotateMatrixClockwise(newState));\n    }\n  }\n\n  moveDown() {\n    if (this.gameStatus !== 'playing') {\n      return;\n    }\n\n    let moveWasMade = false;\n\n    const rotatedState = this.rotateMatrixClockwise(this.state);\n\n    const newState = rotatedState.map((line) => {\n      const newLine = this.mergeLine(line);\n\n      if (newLine !== line) {\n        moveWasMade = true;\n      }\n\n      return newLine;\n    });\n\n    if (moveWasMade) {\n      this.endMove(this.rotateMatrixCounterclockwise(newState));\n    }\n  }\n\n  endMove(newState) {\n    this.state = newState;\n\n    this.setEmptyCells();\n    this.addNumber();\n\n    if (this.emptyCells.length === 0) {\n      this.checkIfGameOver();\n    }\n  }\n\n  mergeLine(line) {\n    const noZeroesLine = line.filter((cell) => cell !== 0);\n    let scoreToAdd = 0;\n    const mergedLine = noZeroesLine.reduce((acc, cell) => {\n      if (cell === acc[acc.length - 1]) {\n        const mergedCell = cell * 2;\n\n        acc.splice(acc.length - 1, 1, mergedCell, 0);\n        scoreToAdd += mergedCell;\n\n        if (mergedCell === 2048) {\n          this.gameStatus = 'win';\n        }\n\n        return acc;\n      }\n\n      return [...acc, cell];\n    }, []);\n\n    const mergedNoZeroesLine = mergedLine.filter((cell) => cell !== 0);\n    const zeroes = new Array(line.length - mergedNoZeroesLine.length).fill(0);\n    const newLine = [...mergedNoZeroesLine, ...zeroes];\n\n    if (scoreToAdd > 0) {\n      this.score += scoreToAdd;\n\n      return newLine;\n    }\n\n    if (newLine.toString() === line.toString()) {\n      return line;\n    }\n\n    return newLine;\n  }\n\n  setEmptyCells() {\n    const updatedEmptyCells = [];\n\n    this.state.forEach((line, lineIndex) => {\n      line.forEach((cell, cellIndex) => {\n        if (cell === 0) {\n          updatedEmptyCells.push([lineIndex, cellIndex]);\n        }\n      });\n    });\n\n    this.emptyCells = updatedEmptyCells;\n  }\n\n  addNumber() {\n    const emptyCellCount = this.emptyCells.length;\n\n    if (emptyCellCount === 0) {\n      return;\n    }\n\n    const indexOfEmptyCell = Math.floor(Math.random() * emptyCellCount);\n    const numberToAdd = Math.floor(Math.random() * 10) ? 2 : 4;\n\n    const stateLineIndex = this.emptyCells[indexOfEmptyCell][0];\n    const stateRowIndex = this.emptyCells[indexOfEmptyCell][1];\n\n    this.state[stateLineIndex][stateRowIndex] = numberToAdd;\n\n    this.emptyCells.splice(indexOfEmptyCell, 1);\n  }\n\n  checkIfGameOver() {\n    const currentState = this.state;\n\n    for (let rowIndex = 0; rowIndex < currentState.length; rowIndex += 2) {\n      const row = currentState[rowIndex];\n\n      for (let columnIndex = 0; columnIndex < row.length; columnIndex++) {\n        if (\n          currentState[rowIndex][columnIndex] ===\n          currentState[rowIndex + 1][columnIndex]\n        ) {\n          return;\n        }\n      }\n    }\n\n    for (let rowIndex = 0; rowIndex < currentState.length; rowIndex++) {\n      const row = currentState[rowIndex];\n\n      for (let columnIndex = 0; columnIndex < row.length; columnIndex += 2) {\n        if (\n          currentState[rowIndex][columnIndex] ===\n          currentState[rowIndex][columnIndex + 1]\n        ) {\n          return;\n        }\n      }\n    }\n\n    this.gameStatus = 'lose';\n  }\n\n  rotateMatrixClockwise(matrix) {\n    const rotatedMatrix = matrix.map(() => []);\n\n    matrix.forEach((row, rowIndex) => {\n      row.forEach((cell, cellIndex) => {\n        rotatedMatrix[cellIndex][matrix.length - rowIndex - 1] = cell;\n      });\n    });\n\n    return rotatedMatrix;\n  }\n\n  rotateMatrixCounterclockwise(matrix) {\n    const rotatedMatrix = matrix.map(() => []);\n\n    matrix.forEach((row, rowIndex) => {\n      row.forEach((cell, cellIndex) => {\n        rotatedMatrix[matrix.length - cellIndex - 1][rowIndex] = cell;\n      });\n    });\n\n    return rotatedMatrix;\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","export function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$4fc75ccb937ab1df$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","$cd5a47cf8ef6d766$export$1e71eb4bef00f6b0","obj","value","$c3b10a83b523f372$export$79e617b1955a2616","arr","len","arr2","Array","$227c6742e0ff6f82$export$1b5e630bc3aea29f","isArray","iter","Symbol","iterator","from","o","minLen","n","prototype","toString","call","slice","constructor","name","test","TypeError","$197cd56b15c33885$var$game","protoProps","staticProps","Game","initialState","arguments","instance","Constructor","INITIAL_STATE","state","JSON","parse","stringify","score","gameStatus","setEmptyCells","addNumber","emptyCells","_this","moveWasMade","newState","map","line","newLine","mergeLine","endMove","reversedLine","reverse","rotatedState","rotateMatrixCounterclockwise","rotateMatrixClockwise","checkIfGameOver","noZeroesLine","filter","cell","scoreToAdd","mergedNoZeroesLine","mergedLine","reduce","acc","mergedCell","splice","concat","zeroes","fill","updatedEmptyCells","forEach","lineIndex","cellIndex","push","emptyCellCount","indexOfEmptyCell","Math","floor","random","stateLineIndex","stateRowIndex","currentState","rowIndex","row","columnIndex","rowIndex1","row1","columnIndex1","matrix","rotatedMatrix","$197cd56b15c33885$var$keys","up","down","left","right","$197cd56b15c33885$var$cells","document","querySelectorAll","$197cd56b15c33885$var$score","querySelector","$197cd56b15c33885$var$button","$197cd56b15c33885$var$messages","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageVictory","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$clearMessages","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","message","classList","add","err","return","$197cd56b15c33885$var$render","stateCells","flat","innerHTML","className","addEventListener","start","restart","remove","param","moveUp","moveDown","moveLeft","moveRight"],"version":3,"file":"index.95a8a325.js.map"}